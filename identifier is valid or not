#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdbool.h>

// List of C keywords
const char *keywords[] = {
    "auto", "break", "case", "char", "const", "continue", "default", "do", 
    "double", "else", "enum", "extern", "float", "for", "goto", "if", "inline",
    "int", "long", "register", "restrict", "return", "short", "signed", 
    "sizeof", "static", "struct", "switch", "typedef", "union", "unsigned", 
    "void", "volatile", "while", "_Bool", "_Complex", "_Imaginary"
};

// Function to check if a given string is a keyword
bool is_keyword(const char *str) {
    for (int i = 0; i < sizeof(keywords) / sizeof(keywords[0]); ++i) {
        if (strcmp(str, keywords[i]) == 0) {
            return true;
        }
    }
    return false;
}

// Function to check if a given identifier is valid
bool is_valid_identifier(const char *identifier) {
    // Check if the first character is a letter or underscore
    if (!(isalpha(identifier[0]) || identifier[0] == '_')) {
        return false;
    }

    // Check the remaining characters
    for (int i = 1; identifier[i] != '\0'; ++i) {
        if (!(isalnum(identifier[i]) || identifier[i] == '_')) {
            return false;
        }
    }

    // Check if the identifier is a keyword
    if (is_keyword(identifier)) {
        return false;
    }

    return true;
}

int main() {
    char identifier[100];

    // Prompt user for input
    printf("Enter an identifier: ");
    scanf("%s", identifier);

    // Check if the identifier is valid
    if (is_valid_identifier(identifier)) {
        printf("\"%s\" is a valid identifier.\n", identifier);
    } else {
        printf("\"%s\" is not a valid identifier.\n", identifier);
    }

    return 0;
}
