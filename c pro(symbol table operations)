#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define TABLE_SIZE 100

typedef struct Symbol {
    char name[50];
    char type[20];
    int scope;
    struct Symbol* next;
} Symbol;

Symbol* symbolTable[TABLE_SIZE];

unsigned int hash(char* name) {
    unsigned int hashValue = 0;
    for (int i = 0; name[i] != '\0'; i++) {
        hashValue = hashValue * 31 + name[i];
    }
    return hashValue % TABLE_SIZE;
}

void insertSymbol(char* name, char* type, int scope) {
    unsigned int index = hash(name);
    Symbol* newSymbol = (Symbol*)malloc(sizeof(Symbol));
    strcpy(newSymbol->name, name);
    strcpy(newSymbol->type, type);
    newSymbol->scope = scope;
    newSymbol->next = symbolTable[index];
    symbolTable[index] = newSymbol;
}

Symbol* searchSymbol(char* name) {
    unsigned int index = hash(name);
    Symbol* current = symbolTable[index];
    while (current != NULL) {
        if (strcmp(current->name, name) == 0) {
            return current;
        }
        current = current->next;
    }
    return NULL;
}

void displaySymbolTable() {
    printf("Symbol Table:\n");
    printf("Name\tType\tScope\n");
    printf("-------------------------\n");
    for (int i = 0; i < TABLE_SIZE; i++) {
        Symbol* current = symbolTable[i];
        while (current != NULL) {
            printf("%s\t%s\t%d\n", current->name, current->type, current->scope);
            current = current->next;
        }
    }
}

int main() {
    int choice;
    char name[50], type[20];
    int scope;

    while (1) {
        printf("\nSymbol Table Operations:\n");
        printf("1. Insert Symbol\n");
        printf("2. Search Symbol\n");
        printf("3. Display Symbol Table\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter symbol name: ");
                scanf("%s", name);
                printf("Enter symbol type: ");
                scanf("%s", type);
                printf("Enter symbol scope: ");
                scanf("%d", &scope);
                insertSymbol(name, type, scope);
                break;
            case 2:
                printf("Enter symbol name to search: ");
                scanf("%s", name);
                Symbol*symbol = searchSymbol(name);
                if (symbol) {
                    printf("Symbol found: %s, Type: %s, Scope: %d\n", symbol->name, symbol->type, symbol->scope);
                } else {
                    printf("Symbol not found.\n");
                }
                break;
            
        }
    }

    return 0;
}
